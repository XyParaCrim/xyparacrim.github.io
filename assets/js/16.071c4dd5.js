(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{497:function(e,v,_){"use strict";_.r(v);var a=_(4),t=Object(a.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"redis数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redis数据结构"}},[e._v("#")]),e._v(" Redis数据结构")]),e._v(" "),_("blockquote",[_("p",[e._v("👋👋\nRedis一共有5种数据结构分别为:")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"#string-%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[e._v("字符串（String）")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#list-%E5%88%97%E8%A1%A8"}},[e._v("列表（List）")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#hash-%E5%AD%97%E5%85%B8"}},[e._v("字典（Hash）")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#set-%E9%9B%86%E5%90%88"}},[e._v("集合（Set）")])]),e._v(" "),_("li",[_("a",{attrs:{href:"#zset-%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88"}},[e._v("有序集合（Zset）")])])])]),e._v(" "),_("p",[e._v("下面将从书中提取一些要点或记录一些容易遗漏的要点")]),e._v(" "),_("h2",{attrs:{id:"string-字符串"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[e._v("#")]),e._v(" String - 字符串")]),e._v(" "),_("p",[e._v("Redis的字符串为动态字符串，是可以修改字符串，内部结构的实现类似于Java的ArrayList：采用预分配冗余空间的方式来减少内存的频繁分配。")]),e._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",[e._v("当字符串小于1MB时，扩容为加倍现有空间；当字符串大于1MB时，一次只会最多扩容1MB")])]),e._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",[e._v("字符串最大长度为512MB")])]),e._v(" "),_("h3",{attrs:{id:"cli"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[e._v("#")]),e._v(" Cli")]),e._v(" "),_("p",[e._v("可以使用下面命令操纵：")]),e._v(" "),_("ul",[_("li",[e._v("单键操纵\n"),_("ul",[_("li",[_("code",[e._v("set ${key} ${value}")]),e._v("：设置"),_("code",[e._v("key=value")])]),e._v(" "),_("li",[_("code",[e._v("get ${key}")]),e._v("：获取key的值")]),e._v(" "),_("li",[_("code",[e._v("del ${key}")]),e._v("：删除key的值")])])]),e._v(" "),_("li",[e._v("批量操作\n"),_("ul",[_("li",[_("code",[e._v("mset ${key1} ${value1} ${key2} ${value2}")]),e._v("：批量设置key1、key2为value1、value2")]),e._v(" "),_("li",[_("code",[e._v("mget ${key1} ${key2}")]),e._v("：批量删除key1、key2")])])]),e._v(" "),_("li",[e._v("期限操作\n"),_("ul",[_("li",[_("code",[e._v("expire ${key}")]),e._v("：设置key 5s后过期")]),e._v(" "),_("li",[_("code",[e._v("setex ${key} ${expire} ${value}")]),e._v("：设置key=value，expire秒后过期")])])]),e._v(" "),_("li",[e._v("计数操作\n"),_("ul",[_("li",[_("code",[e._v("incr ${key}")]),e._v("：对值为"),_("strong",[e._v("整数类型")]),e._v("的key，自增一")])])])]),e._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",[e._v("自增的范围为signed long，即-2^63 ~ 2^63 - 1")])]),e._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",[e._v("String由多个byte（8bit）组成，所以是很多bit组成，即位图（bitmap）")])]),e._v(" "),_("h3",{attrs:{id:"常见用途"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见用途"}},[e._v("#")]),e._v(" 常见用途")]),e._v(" "),_("ul",[_("li",[e._v("缓存用户信息，例如将信息以JSON的形式序列化存至Redis中")]),e._v(" "),_("li",[e._v("缓存Java Bean，"),_("code",[e._v("Spring-web-session")]),e._v("默认缓存Java bean作为web session")])]),e._v(" "),_("h2",{attrs:{id:"list-列表"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#list-列表"}},[e._v("#")]),e._v(" List - 列表")]),e._v(" "),_("p",[e._v("Redis与Java里的LinkedList相同，所以它不是"),_("code",[e._v("RandomAccess")]),e._v("类型，支持双向遍历。")]),e._v(" "),_("p",[e._v("List宏观与LinkedList，但是其链表的每个节点其实是压缩列表（ziplist）：")]),e._v(" "),_("ul",[_("li",[e._v("一块连续内存")]),e._v(" "),_("li",[e._v("所有元素彼此紧挨着一起存储")])]),e._v(" "),_("p",[e._v("为什么要使用ziplist呢？")]),e._v(" "),_("ul",[_("li",[e._v("节点需要附加指针空间，加重内存碎片化")]),e._v(" "),_("li",[e._v("节省空间")])]),e._v(" "),_("h3",{attrs:{id:"cli-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli-2"}},[e._v("#")]),e._v(" Cli")]),e._v(" "),_("ul",[_("li",[e._v("基本操作\n"),_("ul",[_("li",[_("code",[e._v("llen ${key}")]),e._v("：获取key队列数量")])])]),e._v(" "),_("li",[e._v("先进先出\n"),_("ul",[_("li",[_("code",[e._v("rpush ${key} ${value1} ${value2}")]),e._v("：将value1、value2入key的队")]),e._v(" "),_("li",[_("code",[e._v("lpop ${key}")]),e._v("：推出最后一个元素")])])]),e._v(" "),_("li",[e._v("后进先出\n"),_("ul",[_("li",[_("code",[e._v("rpop")]),e._v("：推出队头元素")])])]),e._v(" "),_("li",[e._v("队列访问 "),_("Badge",{attrs:{text:"慢操作",type:"error"}}),e._v(" "),_("ul",[_("li",[_("code",[e._v("lindex ${key} ${index}")]),e._v("：获取key队列中index位置的元素")]),e._v(" "),_("li",[_("code",[e._v("lrange ${key} ${index-start} ${end-start}")]),e._v("：获取key队列中index-start至index-end范围的元素")]),e._v(" "),_("li",[_("code",[e._v("ltrim ${key} ${index-start} ${end-start}")]),e._v("：修剪key队列中index-start至index-end范围的元素")])])],1)]),e._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",[_("code",[e._v("expire")]),e._v("针对整个List，Hash、Set和Zset也一样")])]),e._v(" "),_("h3",{attrs:{id:"常见用途-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见用途-2"}},[e._v("#")]),e._v(" 常见用途")]),e._v(" "),_("ul",[_("li",[e._v("异步队列使用，将需要延后处理的任务结构序列化成字符串，存储至Redis")])]),e._v(" "),_("h2",{attrs:{id:"hash-字典"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#hash-字典"}},[e._v("#")]),e._v(" Hash - 字典")]),e._v(" "),_("p",[e._v("Hash与Java中HashMap相似：")]),e._v(" "),_("ul",[_("li",[e._v("无序")]),e._v(" "),_("li",[e._v("数据 + 链表")])]),e._v(" "),_("p",[e._v("与HashMap不同的是rehash的过程，java是一次性rehash，而Redis为了追求高性能，不阻塞服务，采用渐进式rehash策略，这与Java 11中ConcurrentHashMap采取的策略是一样的。")]),e._v(" "),_("ul",[_("li",[e._v("Redis单线程：定时任务或者hash请求操作中，循序渐进地将旧hash slot搬移至新hash中，将任务分散至每次定时任务和请求操作中。")]),e._v(" "),_("li",[e._v("Java11：多线程会在访问Hash时，分到均匀的Slot数量（步长）进行rehash")])]),e._v(" "),_("h3",{attrs:{id:"cli-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli-3"}},[e._v("#")]),e._v(" Cli")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("hset ${key} ${slotKey} ${slotValue}")]),e._v("：设置key字典，slotKey = slotValue")]),e._v(" "),_("li",[_("code",[e._v("hgetall ${key}")]),e._v("：获取key的所有元素")]),e._v(" "),_("li",[_("code",[e._v("hlen ${key}")]),e._v("：获取key的数量")]),e._v(" "),_("li",[_("code",[e._v("hget ${key} ${slotKey}")]),e._v("：获取key中slotKey的值")]),e._v(" "),_("li",[_("code",[e._v("hmget")]),e._v("和"),_("code",[e._v("hmset")]),e._v("：批量设置或获取")]),e._v(" "),_("li",[_("code",[e._v("hincrby ${key} ${slotKey} ${count}")]),e._v("：自增")])]),e._v(" "),_("h2",{attrs:{id:"set-集合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[e._v("#")]),e._v(" Set - 集合")]),e._v(" "),_("p",[e._v("Set与Java中HashSet相似")]),e._v(" "),_("ul",[_("li",[e._v("无序")])]),e._v(" "),_("h3",{attrs:{id:"cli-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli-4"}},[e._v("#")]),e._v(" Cli")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("sadd ${key} ${value} ${value1}")]),e._v("：添加value、value1至key中")]),e._v(" "),_("li",[_("code",[e._v("smembers ${key}")]),e._v("：获取所有元素")]),e._v(" "),_("li",[_("code",[e._v("susmember ${key} ${value}")]),e._v("：查询value元素")]),e._v(" "),_("li",[_("code",[e._v("scard ${key}")]),e._v("：获取长度")]),e._v(" "),_("li",[_("code",[e._v("spop ${key}")]),e._v("：弹出元素")])]),e._v(" "),_("h3",{attrs:{id:"常见用途-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见用途-3"}},[e._v("#")]),e._v(" 常见用途")]),e._v(" "),_("ul",[_("li",[e._v("储存中奖用户ID，去重保证不会用户两次中奖")])]),e._v(" "),_("h2",{attrs:{id:"zset-有序集合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#zset-有序集合"}},[e._v("#")]),e._v(" Zset - 有序集合")]),e._v(" "),_("p",[e._v("Set类似于Java中HashSet和SortedSet的结合体，它为每个value赋予一个score，用于其的有序，很容易想到其实现的数据结构是跳跃列表")]),e._v(" "),_("blockquote",[_("p",[e._v("首先元素位于L0层概率为100%，而L1层概率为50%，依次筛选和类推，L2概率25%，L3概率12.5%，所以很多元素可以通过几层就可以访问到。")])]),e._v(" "),_("h3",{attrs:{id:"cli-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#cli-5"}},[e._v("#")]),e._v(" Cli")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("zadd ${key} ${score} ${value}")]),e._v("：设置元素和权重")]),e._v(" "),_("li",[_("code",[e._v("zrange ${key} ${index-start} ${index-end}")]),e._v("：按照权重获取范围排序元素")]),e._v(" "),_("li",[_("code",[e._v("zrevrange ${key} ${index-start} ${index-end}")]),e._v("：按照权重获取范围逆序排序元素")]),e._v(" "),_("li",[_("code",[e._v("zscore ${key} ${value}")]),e._v("：获取权重值")]),e._v(" "),_("li",[_("code",[e._v("zrank ${key} ${value}")]),e._v("：获取value的排名")]),e._v(" "),_("li",[_("code",[e._v("zrangeByscore ${key} ${score-start} ${score-end}")]),e._v("：获取权重范围的元素\n"),_("ul",[_("li",[_("code",[e._v("zrangeByscore ${key} ${score-start} ${score-end} withscores")]),e._v("：withscores表示同时返回参数")])])]),e._v(" "),_("li",[_("code",[e._v("zrem ${key} ${value}")]),e._v("：删除value")])]),e._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",[_("code",[e._v("inf")]),e._v("表示无穷，"),_("code",[e._v("-inf")]),e._v("表示负无穷")])]),e._v(" "),_("h3",{attrs:{id:"常见用途-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见用途-4"}},[e._v("#")]),e._v(" 常见用途")]),e._v(" "),_("ul",[_("li",[e._v("储存粉丝列表，score为关注时间，使用关注时间进行排序")]),e._v(" "),_("li",[e._v("储存学生成绩，score为考试成绩")])])])}),[],!1,null,null,null);v.default=t.exports}}]);