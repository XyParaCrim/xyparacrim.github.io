(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{505:function(a,e,s){"use strict";s.r(e);var t=s(4),_=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"布隆过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[a._v("#")]),a._v(" 布隆过滤器")]),a._v(" "),s("blockquote",[s("p",[a._v("😎😎")]),a._v(" "),s("p",[a._v("布隆过滤器是一个只存key哈希值的set，非常适合黑名单")])]),a._v(" "),s("h2",{attrs:{id:"自己理解的布隆过滤器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自己理解的布隆过滤器"}},[a._v("#")]),a._v(" 自己理解的布隆过滤器")]),a._v(" "),s("p",[a._v("初闻Redis时，其相当于单机里面的内存，因为需要分布式，所以需要另一台机器缓存共享数据。自然而然想到用于存储数据最新持久化的数据，加快效率，这么简单为什么还多出个布隆过滤器？P过滤器！原来不仅需要缓存已存数据，还需要缓存未命中数据，这就是布隆过滤器的作用")]),a._v(" "),s("blockquote",[s("p",[a._v("都是因为自己工作中根本不使用Redis的关系，而且初闻时分析了一波也太简单了（一样论），不理解布隆过滤器就没有主动去了解，都是从一些旁门左道获知零星信息")])]),a._v(" "),s("h2",{attrs:{id:"cli"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[a._v("#")]),a._v(" Cli")]),a._v(" "),s("p",[a._v("布隆过滤器提供"),s("code",[a._v("bf.add")]),a._v("和"),s("code",[a._v("bf.exists")]),a._v("单操作操作，批量操作可以使用"),s("code",[a._v("bf.madd")]),a._v("和"),s("code",[a._v("bf.mexists")])]),a._v(" "),s("p",[a._v("特别地，"),s("code",[a._v("bf.reserve")]),a._v("显现创建过滤器，提供key、error_rate和initial_size三个参数")]),a._v(" "),s("h2",{attrs:{id:"具体实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#具体实现"}},[a._v("#")]),a._v(" 具体实现")]),a._v(" "),s("p",[a._v("用三个hash函数计算key落于hash数组的位置，以下几个特点能完整概括过滤器")]),a._v(" "),s("ul",[s("li",[a._v("查key是否存在是，判断三个计算的hash位置是否都有值")]),a._v(" "),s("li",[a._v("key过多的时候会产生hash碰撞，所以是大似精确")]),a._v(" "),s("li",[a._v("过滤器判断有不一定有，没有则一定没有（某些值的Slot恰巧会被其他值占据）")])]),a._v(" "),s("p",[s("code",[a._v("initial_size")]),a._v("就是初始化时，hash数组的长度；显然"),s("code",[a._v("error_rate")]),a._v("越小需要空间即数组长度越大。")]),a._v(" "),s("h3",{attrs:{id:"空间估算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#空间估算"}},[a._v("#")]),a._v(" 空间估算")]),a._v(" "),s("p",[a._v("这是没有实际操作，只是根据书本的信息：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("# l为initial_size，f为error_rate，n是预估元素数量，k为hash函数个数\nk = 0.7 * (l/n)\nf = 0.6185 ^ (l/n)\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[a._v("#")]),a._v(" 应用")]),a._v(" "),s("ul",[s("li",[a._v("黑名单")]),a._v(" "),s("li",[a._v("垃圾邮箱过滤")]),a._v(" "),s("li",[a._v("URL去重")])])])}),[],!1,null,null,null);e.default=_.exports}}]);